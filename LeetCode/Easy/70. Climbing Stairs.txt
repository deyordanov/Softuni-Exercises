public class Solution {
  public int ClimbStairs(int n) {
    Dictionary < int, int > memoization = new Dictionary < int, int > ();

    return GetWaysToTop(0, n, memoization);
  }

  int GetWaysToTop(int x, int n, Dictionary < int, int > memo) {
    if (x > n) {
      return 0;
    }

    if (x == n) {
      return 1;
    }

    int byOneStep;
    int byTwoSteps;
    if (memo.ContainsKey(x + 1)) {
      byOneStep = memo[x + 1];
    } else {
      byOneStep = GetWaysToTop(x + 1, n, memo);
      memo.Add(x + 1, byOneStep);
    }

    if (memo.ContainsKey(x + 2)) {
      byTwoSteps = memo[x + 2];
    } else {
      byTwoSteps = GetWaysToTop(x + 2, n, memo);
      memo.Add(x + 2, byTwoSteps);
    }

    return byOneStep + byTwoSteps;
  }
}