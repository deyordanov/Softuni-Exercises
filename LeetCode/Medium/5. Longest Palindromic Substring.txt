public class Solution {
  public string LongestPalindrome(string s) {
    int maxLength = 0;
    int maxLeftIndex = 0;
    int maxRightIndex = 0;
    for (int i = 0; i < s.Length; i++) {
      int left = i;
      int right = i;
      while (left >= 0 &&
        right < s.Length &&
        s[left] == s[right]) {
        if (right - left + 1 > maxLength) {
          maxLength = right - left + 1;
          maxLeftIndex = left;
          maxRightIndex = right;
        }
        left--;
        right++;
      }

      left = i;
      right = i + 1;
      while (left >= 0 &&
        right < s.Length &&
        s[left] == s[right]) {
        if (right - left + 1 > maxLength) {
          maxLength = right - left + 1;
          maxLeftIndex = left;
          maxRightIndex = right;
        }
        left--;
        right++;
      }
    }

    return s.Substring(maxLeftIndex, maxRightIndex - maxLeftIndex + 1);
  }
}