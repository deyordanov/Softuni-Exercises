public class Solution {
    public IList<IList<int>> ThreeSum(int[] nums) {
        IList<IList<int>> result = new List<IList<int>>();

        if(nums.Length <= 2){
            return result;
        }

        Array.Sort(nums);

        int start = 0;
        while(start < nums.Length - 2){
            int target = nums[start] * -1;
            int left = start + 1;
            int right = nums.Length - 1;

            while(left < right){

                if(nums[left] + nums[right] < target){
                    ++left;
                }
                else if(nums[left] + nums[right] > target){
                    --right;
                }
                else{
                    List<int> solution = new List<int>() { nums[start], nums[left], nums[right]};
                    result.Add(solution);

                    while(left < right && nums[left] == solution[1]){
                        ++left;
                    }

                    while(right > left && nums[right] == solution[2]){
                        --right;
                    }
                }
            }
            int currNum = nums[start];
            while(start < nums.Length - 2 && nums[start] == currNum){
                ++start;
            }
        }
        return result;
    }
}