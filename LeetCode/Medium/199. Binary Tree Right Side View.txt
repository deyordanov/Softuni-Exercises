/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<int> RightSideView(TreeNode root) {
        if(root == null) return new List<int>();
        List<int> nodes = new List<int>();
        DFS(root, 1, nodes);
        return nodes;
    }

    void DFS(TreeNode node, int depth, List<int> nodes)
    {
        if(node == null) return;

        if(nodes.Count < depth)
        {
            nodes.Add(node.val);
        }

        DFS(node.right, depth + 1, nodes);
        DFS(node.left, depth + 1, nodes);
    }
}