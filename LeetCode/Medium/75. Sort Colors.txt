public class Solution {
  public void SortColors(int[] nums) {
    int[] sortedArray = MergeSort(nums);
    sortedArray.ToList().CopyTo(nums);
  }
  int[] MergeSort(int[] numbers) {
    if (numbers.Length == 1) {
      return numbers;
    }

    int[] leftArray = numbers
      .Take(numbers.Length / 2)
      .ToArray();

    int[] rightArray = numbers
      .Skip(numbers.Length / 2)
      .ToArray();

    return Merge(MergeSort(leftArray), MergeSort(rightArray));
  }

  int[] Merge(int[] left, int[] right) {
    int leftIndex = 0;
    int rightIndex = 0;
    int mergedIndex = 0;
    int[] mergedArray = new int[left.Length + right.Length];

    while (leftIndex < left.Length &&
      rightIndex < right.Length) {
      if (left[leftIndex] < right[rightIndex]) {
        mergedArray[mergedIndex++] = left[leftIndex++];
      } else {
        mergedArray[mergedIndex++] = right[rightIndex++];
      }
    }

    while (leftIndex < left.Length) {
      mergedArray[mergedIndex++] = left[leftIndex++];
    }

    while (rightIndex < right.Length) {
      mergedArray[mergedIndex++] = right[rightIndex++];
    }

    return mergedArray;
  }
}