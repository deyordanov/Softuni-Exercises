public class Solution {
  public int[] TwoSum(int[] numbers, int target) {
    for (int i = 0; i < numbers.Length; i++) {
      int index = BinarySearch(numbers, target - numbers[i]);
      if (index != -1 && i != index) {
        return new int[2] {
          Math.Min(i + 1, index + 1), Math.Max(i + 1, index + 1)
        };
      }
    }

    return new int[0];
  }
  int BinarySearch(int[] nums, int number) {
    int leftIndex = 0;
    int rightIndex = nums.Length - 1;
    int middleIndex;

    while (leftIndex <= rightIndex) {
      middleIndex = leftIndex + (rightIndex - leftIndex) / 2;
      int numberFound = nums[middleIndex];
      if (numberFound == number) {
        return middleIndex;
      } else if (numberFound > number) {
        rightIndex = middleIndex - 1;
      } else {
        leftIndex = middleIndex + 1;
      }
    }

    return -1;
  }
}