public class Solution {
  public int NumIslands(char[][] grid) {
    int islands = 0;
    for (int row = 0; row < grid.Length; row++) {
      for (int col = 0; col < grid[row].Length; col++) {
        if (grid[row][col] == '1') {
          DFS(grid, row, col);
          islands++;
        }
      }
    }
    return islands;
  }

  void DFS(char[][] grid, int row, int col) {
    if (!IsValid(grid, row, col)) {
      return;
    }

    grid[row][col] = '0';

    DFS(grid, row - 1, col);
    DFS(grid, row, col + 1);
    DFS(grid, row + 1, col);
    DFS(grid, row, col - 1);
  }
  bool IsValid(char[][] grid, int row, int col) {
    return row >= 0 &&
      row < grid.Length &&
      col >= 0 &&
      col < grid[row].Length &&
      grid[row][col] == '1';
  }
}