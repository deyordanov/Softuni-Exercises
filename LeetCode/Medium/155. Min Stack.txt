public class MinStack {
  class Node {
    public Node(int value) {
      this.Value = value;
    }

    public int Value {
      get;
      set;
    }
    public Node Next {
      get;
      set;
    }
  }
  private Node top;
  private Node minNode;

  public MinStack() {
    this.minNode = new Node(int.MaxValue);
  }

  public void Push(int val) {
    Node newTop = new Node(val);
    newTop.Next = this.top;
    this.top = newTop;

    if (this.top.Value <= this.minNode.Value) {
      this.minNode = this.top;
    }
  }

  public void Pop() {
    if (this.top == minNode) {
      int minValue = int.MaxValue;
      Node node = this.top.Next;
      while (node != null) {
        if (node.Value <= minValue) {
          this.minNode = node;
          minValue = this.minNode.Value;
        }

        node = node.Next;
      }
    }

    if (this.top.Next == null)
    {
        this.minNode = new Node(int.MaxValue);
    }

    this.top = this.top.Next;
  }

  public int Top() {
    return this.top.Value;
  }

  public int GetMin() {
    return this.minNode.Value;
  }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.Push(val);
 * obj.Pop();
 * int param_3 = obj.Top();
 * int param_4 = obj.GetMin();
 */